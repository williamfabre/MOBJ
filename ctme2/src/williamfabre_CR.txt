 _____                       _                            _          ___________  _____
/  __ \                     | |                          | |        |_   _| ___ \/ __  \
| /  \/ ___  _ __ ___  _ __ | |_ ___   _ __ ___ _ __   __| |_   _     | | | |_/ /`' / /'
| |    / _ \| '_ ` _ \| '_ \| __/ _ \ | '__/ _ \ '_ \ / _` | | | |    | | |  __/   / /
| \__/\ (_) | | | | | | |_) | ||  __/ | | |  __/ | | | (_| | |_| |    | | | |    ./ /___
 \____/\___/|_| |_| |_| .__/ \__\___| |_|  \___|_| |_|\__,_|\__,_|    \_/ \_|    \_____/
                      | |
                      |_|

William Fabre
3410804
contact@williamfabre.fr

# Exercice 1
J'ai modifie un peu le programme de test pour qu'il ressemble exactement au TP1
et j'ai implementer entierement la classe.

# Exercice 2
On ne peut pas initialiser grace au constructeur private. Si le constructeur
est private alors il n'est pas accessible en dehors de sa classe.

# Exercice 3
le mot cle inline du compilateur GCC va faire ne sorte que la ligne de commande
soit remplacee a la compilation. C'est a dire remplacer l'appelle de la
fonction par le code de la fonction afin de ne pas avoir les prologue et
epilogue de ces fonctions sur la pile et directement acceder a leur code. On va
gagner un peu d'overhead inutile.

//TODO finir pourquoi inline aide au linkage.

# Exercice 4
 ## Question 1
 La surcharge se fait avec operator<< dans le fichier Main.cpp
 ## Question 2
 La surcharge se fait avec operator&& dans la Class, dans le fichier box.h
 ## Question 3
 La surcharge etant faite le compilo va prendre and pour &&. Cela sera utile
 dans la phase de test pour creer une "boite d'intersection" voir ligne 32 de
 Main.cpp

# Exercice 5

//TODO
